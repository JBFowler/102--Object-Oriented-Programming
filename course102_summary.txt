Summary for course 102

This course was a fantastic introduction to OOP.  It breaks down what is really going on with the language itself, instead of simply memorizing what you should do here and not do there.  What I found helpful was the different games we built using OOP.  They created a great mindset for how to go about starting a program, and then how to build off of it from there.  I thought that the refactoring parts were especially helpful.  It allowed me to see how classes should function within the program, and how they should limit themselves on their capabilities instead of allowing them to do whatever I want them to do.  It really demonstrated what the scope of a class should look like.  What didn't work well for me was not so much any part of the course, but more of getting lost of which methods belong to which class, and which object belong to which class.  As your program expands, it's complexity expands, and this is something that I will learn to adjust with as time goes on and my understanding grows.  I retained the concepts very well.  I feel that I can debug with a fair amount of certainty, and that I can discover a solution to my problem either online or on my own with a high level of competancy.  I thought the most difficult parts were trying the games on my own without consulting the solutions.  I at times relied heavily on the solutions, but for the most part just use them to get me going in the right direction.  Although it seemed that my own programming more often than not reflected that of the solutions even when I wasn't using them.  The easy parts were the exercises in the books, but they were perfect to kind of drive home the concepts that you had just learned.

I would say that my knowledge and comfort level of OOP is good for being a beginner.  My comfort level is high, however my speed is slow.  I know that with determination I can solve almost any problem, but I tend to take my time on figuring things out.  I also get a little unnerved thinking about other students that may be so much better at what we're doing, and it's hard to understand why I may not retain things as quickly. However, I am confident in my abilities as a beginner, and believe I will make a great programmer as time goes on. 